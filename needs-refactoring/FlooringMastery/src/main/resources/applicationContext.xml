<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop  
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <!-- Bean definitions for main Flooring program -->
    
    <!-- Create UserIOConsoleImpl bean for UserIO-->
    <bean id="userIO" class="com.sg.flooringmastery.ui.UserIOConsoleImpl"/>
    
    <!-- Create bean for View and inject userIO dependency bean-->
    <bean id="view" class="com.sg.flooringmastery.ui.FlooringView">
        <constructor-arg ref="userIO"/>
    </bean>
    
    
    <!-- Create bean for directory string -->
    <bean id="directory" class="java.lang.String">
        <constructor-arg value="data/"/>
    </bean>
    
    
    
    <!-- Create OrderDaoFileImpl bean for OrderDao with directory bean in constructor-->
    <bean id="orderDao" class="com.sg.flooringmastery.dao.FlooringOrderDaoInMemImpl"/>

    
    <!-- Create UniqueOrderNumberDaoFileImpl bean for UniqueOrderNumberDao with dir bean-->
    <bean id="uniqueOrderNumberDao" 
          class="com.sg.flooringmastery.dao.FlooringUniqueOrderNumberDaoInMemImpl"/>

    
    <!-- Create ProductDaoFileImpl bean for ProductDao-->
    <bean id="productDao" 
          class="com.sg.flooringmastery.dao.FlooringProductDaoFileImpl">
            <constructor-arg ref="directory"/>
    </bean>
    
    <!-- Create TaxDaoFileImpl bean for TaxDao-->
    <bean id="taxDao" 
          class="com.sg.flooringmastery.dao.FlooringTaxDaoFileImpl">
            <constructor-arg ref="directory"/>
    </bean>    
    
    
    <!-- Create AuditDaoFileImpl bean for AuditDao
    <bean id="auditDao" 
         class="com.sg.flooringmastery.dao.VendingMachineAuditDaoFileImpl"/>
    -->
   

    
    <!-- Create bean for UniqueOrderNumberService and inject UniqueOrderNumberDao bean -->
    <bean id="uniqueOrderNumberService" 
         class="com.sg.flooringmastery.service.FlooringUniqueOrderNumberServiceImpl">
        <constructor-arg ref="uniqueOrderNumberDao"/>      
    </bean> 
    
    <!-- Create bean for ProductService and inject ProductDao bean -->
    <bean id="productService"
         class="com.sg.flooringmastery.service.FlooringProductServiceImpl">
        <constructor-arg ref="productDao"/>      
    </bean> 
    
    <!-- Create bean for TaxService and inject TaxDao bean -->
    <bean id="taxService" 
         class="com.sg.flooringmastery.service.FlooringTaxServiceImpl">
        <constructor-arg ref="taxDao"/>      
    </bean>
    
    <!-- Create bean for OrderService and inject Service and OrderDao beans -->
    <bean id="orderService" 
         class="com.sg.flooringmastery.service.FlooringOrderServiceImpl">
        <constructor-arg ref="orderDao"/>
        <constructor-arg ref="productService"/>
        <constructor-arg ref="taxService"/>
        <constructor-arg ref="uniqueOrderNumberService"/>      
    </bean>                                                           
    
    
    
    <!-- Create bean for Controller and inject Order Service and View beans-->
    <bean id="controller" 
         class="com.sg.flooringmastery.controller.FlooringController">
        <constructor-arg ref="view"/>
        <constructor-arg ref="orderService"/>
        <constructor-arg ref="uniqueOrderNumberService"/>
    </bean>
    
</beans>    
    
    <!-- Create bean for transaction LoggingAdvice and inject AuditDao dependency bean
    <bean id="loggingAdvice"
        class="com.sg.flooringmastery.advice.LoggingAdvice">
        <constructor-arg ref="auditDao"/>
    </bean>-->
    <!-- Create bean for ExceptionLoggingAdvice and inject AuditDao dependency bean
    <bean id="exceptionLoggingAdvice"
        class="com.sg.flooringmastery.advice.ExceptionLoggingAdvice">
        <constructor-arg ref="auditDao"/>
    </bean>-->

    <!-- Aspect Oriented Programming configuration
    <aop:config> -->
        <!-- Create aspect for LoggingAdvice and apply it to addmoneyEntered and calculateChange JoinPoints
        <aop:aspect ref="loggingAdvice">
            <aop:after-returning
                method="createAuditEntry"
                pointcut="execution(* com.sg.flooringmastery.service.VendingMachineService.addMoneyEnteredToDAO(..))"
            />
            <aop:after-returning
                method="createAuditEntry"
                pointcut="execution(* com.sg.flooringmastery.service.VendingMachineService.calculateChange(..))"
            />-->
        <!-- Create aspect for ExceptionLoggingAdvice and apply it to purchaseItem JoinPoint
        </aop:aspect>
        <aop:aspect ref="exceptionLoggingAdvice">
            <aop:after-throwing 
                method="createExceptionAuditEntry"
                pointcut="execution(* com.sg.flooringmastery.service.VendingMachineService.purchaseItem(..))"
                throwing="ex"
            />
        </aop:aspect>
    </aop:config>-->
   
