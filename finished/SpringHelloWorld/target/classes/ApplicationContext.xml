<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc.xsd
          http://www.springframework.org/schema/tx
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/context
          http://www.springframework.org/schema/context/spring-context.xsd
          http://www.springframework.org/schema/aop  
          http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <!-- Bean definitions go here -->
    <bean id="myService" class="com.mycompany.springhelloworld.MessageServiceImpl"/>
    <bean id="myController" class="com.mycompany.springhelloworld.MessageController">
        <constructor-arg ref="myService" />
    </bean>
        
   
</beans> <!-- base xml for spring to read from: used in many projects -->

<!-- a bean is an instantiated object with a nickname in system, the dependency is the impl-->
<!-- bean aka dependency aka interface impl -->
<!-- we leave instructions for spring for where and how to deal with them -->
<!-- bean is the implementation of the interface we're dealing with --> 
<!-- with this, no more instantiating implementations --> 
<!-- dependency in pom.xml file referes to libraries we pull in through maven -->
<!-- injections happen in xml file, with only the buckets left in the app -->
<!-- additional constructor-arg tags would be used for a view, etc -->
<!-- class is the address of the bean -->
<!-- id is for reference inside the constructor-arg tag -->